{
    "docs": [
        {
            "location": "/", 
            "text": "AutoPyFactory Tools \n\n\n 1  About this Document\n\n \n 2  Applicable versions\n\n \n 3  Description\n\n \n 4  Deployment using RPM\n\n \n 5  Tools\n\n\n 5.1  apf-condor-q\n\n \n 5.2  apf-condor-status\n\n \n 5.3  apf-queue-status\n\n \n 5.4  apf-simulate-scheds\n\n \n 5.5  apf-reverse-logstree\n\n \n\n \n\n\n\n 1  About this Document \n\n\n\nThis document describes the AutoPyFactory Tools, a set of utilities around  AutoPyFactory\n.\n\n\nConventions used in this document:\n\n\n\n\n\nA \nUser Command Line\n is illustrated by a green box that displays a prompt:\n\n\n\n\n\n  [user@client ~]$\n\n\n\n\n\nA \nRoot Command Line\n is illustrated by a red box that displays the \nroot\n prompt:\n\n\n\n\n\n  [root@client ~]$\n\n\n\n\n\nLines in a file\n are illustrated by a yellow box that displays the desired lines in a file:\n\n\n\npriorities=1\n\n\n\n\n\n\n\n\n\n\n\n 2  Applicable versions \n\n\n\nAs the Tools evolve in a different path that AutoPyFactory, the package has a different version number than APF. \n\nThe current version of AutoPyFactory Tools is 1.0.3\n\n\n\n\n\nWARNING:\n these tools may change over time, with no guarantee of backward compatibility. \n\n\n\n 3  Description \n\n\n\nThese Tools is a set of utilities related to AutoPyFactory. \nTherefore, they don't perform any useful action on any host that does not have a factory instance set.\nThey are not, extrictly speaking, needed to run the factory, but they provide for ancillary useful commands. \n\n\n\n 4  Deployment using RPM \n\n\n\nThese instructions assume Red Hat /\nEnterprise Linux 6.x (and derivates) and the system Python 2.6.x. Other distros and higher \nPython versions should work with some extra work. \n\n\nAlso, it is assumed that AutoPyFactory has been installed.\n\n\nWe distribute now AutoPyFactory Tools RPMs using the Open Science Grid (OSG) yum infrastructure. \nInstall the OSG yum repo files:\n\n\n\n\n[root@client ~]$ rpm -Uhv  http://repo.grid.iu.edu/osg/3.3/osg-3.3-el6-release-latest.rpm\nRetrieving http://repo.grid.iu.edu/osg/3.3/osg-3.3-el6-release-latest.rpm\nPreparing...                ########################################### [100%]\n   1:osg-release            ########################################### [100%]\n\n\n\n\nMore extensive documentation on how to install the OSG yum files can be found \nhere\n.\n\n\n\nIMPORTANT\n: it may happen that a new version of AutoPyFactory Tools is not available in the release repo, but it is in the development repo. This will happen, for example, when a bug needs to be fixed, and the new RPM is not available yet \"officially\" until next OSG cycle. \nTherefore, for this type of cases, you may want to enable the development repo as well, as it is disabled by default, by setting \nenabled=1\n in the file \n/etc/yum.repos.d/osg-el6-development.repo\n :\n\n\n\n\n[osg-development]\nname=OSG Software for Enterprise Linux 6 - Development - $basearch\nmirrorlist=http://repo.grid.iu.edu/mirror/osg/3.3/el6/development/$basearch\nfailovermethod=priority\npriority=98\nenabled=1\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-OSG\nconsider_as_osg=yes\n\n\n[osg-development-source]\nname=OSG Software for Enterprise Linux 6 - Development - $basearch - Source\nbaseurl=http://repo.grid.iu.edu/osg/3.3/el6/development/source/SRPMS\nfailovermethod=priority\npriority=98\nenabled=0\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-OSG\n\n\n[osg-development-debuginfo]\nname=OSG Software for Enterprise Linux 6 - Development - $basearch - Debug\nbaseurl=http://repo.grid.iu.edu/osg/3.3/el6/development/$basearch/debug\nfailovermethod=priority\npriority=98\nenabled=0\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-OSG\n\n\n\n\n\nTo install:\n\n\n\n\n[root@client ~]$ yum install autopyfactory-tools\n\n\n\n\n\n 5  Tools \n\n\n\n\n 5.1  apf-condor-q \n\n\n\nPrints some information about the current pilots, one by one.\n\n\nInput options:\n\n\n\n\n  \n\n    \nvariable\n\n    \ndescription\n\n    \ncomment\n\n  \n\n\n\n    \n-H|--headers\n\n    \n Prints the header of each column\n\n    \nOptional \n\n  \n\n\n\n\n\nExample:\n\n\n\n\n[root@client ~]$ apf-condor-q -H\nid           owner          qdate                cmd                             jobstatus  enteredcurrentstatus  ec2amiid   match_apf_queue                   \n\n11799213.7   autopyfactory  2016-07-05 15:45:46  /usr/libexec/wrapper-0.9.15.sh  I          0+00:00:00            undefined  mwt2_himem-uct2-gk-htcondor       \n\n11799213.8   autopyfactory  2016-07-05 15:45:46  /usr/libexec/wrapper-0.9.15.sh  I          0+00:00:00            undefined  mwt2_himem-uct2-gk-htcondor       \n\n11799213.9   autopyfactory  2016-07-05 15:45:46  /usr/libexec/wrapper-0.9.15.sh  I          0+00:00:00            undefined  mwt2_himem-uct2-gk-htcondor       \n\n11799214.0   autopyfactory  2016-07-05 15:45:51  /usr/libexec/wrapper-0.9.15.sh  I          0+00:00:00            undefined  mwt2_himem_mcore-uct2-gk-htcondor \n\n11799215.1   autopyfactory  2016-07-05 15:46:01  /usr/libexec/wrapper-0.9.15.sh  R          0+00:00:49            undefined  analy_swt2_cpb                    \n\n11799215.2   autopyfactory  2016-07-05 15:46:01  /usr/libexec/wrapper-0.9.15.sh  R          0+00:00:46            undefined  analy_swt2_cpb                    \n\n11799215.3   autopyfactory  2016-07-05 15:46:01  /usr/libexec/wrapper-0.9.15.sh  R          0+00:00:51            undefined  analy_swt2_cpb   \n\n  ...\n  ...        \n\n\n\n\n\n\n\n\n\n\n\n\n 5.2  apf-condor-status \n\n\n\nPrints information about the condor slots.\n\n\nInput options:\n\n\n\n\n  \n\n    \nvariable\n\n    \ndescription\n\n    \ncomment\n\n  \n\n\n\n    \n-H|--headers\n\n    \n Prints the header of each column\n\n    \nOptional \n\n  \n\n\n\n\n\nExample:\n\n\n\n\n[root@client ~]$ apf-condor-status -H\nname                                         slotid  state    activity  nodetype  loadavg  remotegroup  ec2instanceid  ec2publicdns                                                   ec2amiid    \n\nhost-172-12-1-200.openstack.bnl.gov:slot1_1  1       claimed  busy      atlas     8.33     group_mcore  i-0000216a     server-cada3d8d-02db-4a42-b891-67ab0417dc3d.openstack.bnl.gov  ami-00000046\n\nhost-172-12-1-200.openstack.bnl.gov:slot1_2  1       claimed  busy      atlas     8.3      group_mcore  i-0000216a     server-cada3d8d-02db-4a42-b891-67ab0417dc3d.openstack.bnl.gov  ami-00000046\n\nhost-172-12-1-201.openstack.bnl.gov:slot1_1  1       claimed  busy      atlas     8.15     group_mcore  i-0000216b     server-9af3ae5f-26fe-4122-aa30-739369bed25b.openstack.bnl.gov  ami-00000046\n\nhost-172-12-1-210.openstack.bnl.gov:slot1_1  1       claimed  busy      atlas     8.06     group_mcore  i-00002174     server-4b51499d-5f79-48e3-b739-ffe401d33256.openstack.bnl.gov  ami-00000046\n\nhost-172-12-1-201.openstack.bnl.gov:slot1_2  1       claimed  busy      atlas     8.13     group_mcore  i-0000216b     server-9af3ae5f-26fe-4122-aa30-739369bed25b.openstack.bnl.gov  ami-00000046\n\n  ...\n  ... \n\n\n\n\n\n 5.3  apf-queue-status \n\n\n\nPrints aggregated status info queue by queue.\n\n\nInput options:\n\n\n  \n\n    \nvariable\n\n    \ndescription\n\n    \ncomment\n\n  \n\n\n\n    \n-N|--new\n\n    \nMakes the output to be displayed in new format \n\n    \nOptional \n\n  \n\n\n\n    \n-H|--headers\n\n    \nPrints the header of each column. \n\n    \nOptional\nTriggers the new output format \n\n  \n\n\n\n    \n-L|--longest\n\n    \nPrints two additional columns with the longest waiting and running times\n\n    \nOptional \nTriggers the new output format\n\n  \n\n\n\n\n\nExample:\n\n\n\n\n[root@client ~]$ apf-queue-status -N -H -L\nqname                               unsub  idle  running  removed  completed  held  error  longestidle  longestrunning\n\nAGLT2_LMEM-htcondor                 0      3     125      0        0          0     0      0+00:27:47   0+05:56:23    \n\nAGLT2_MCORE-htcondor                0      5     32       0        0          0     0      0+00:27:11   2+21:37:00    \n\nAGLT2_SL6-htcondor                  0      8     117      0        0          0     0      0+00:10:35   2+07:59:21    \n\nAGLT2_TEST-htcondor                 0      3     0        0        0          0     0      0+00:13:07   0+00:00:00    \n\nANALY_AGLT2_SL6-htcondor            0      100   434      0        0          0     0      0+00:04:36   2+23:24:22    \n\nANALY_BNL_LONG-gridgk01-htcondor    0      8     14       0        0          0     0      0+00:36:05   0+08:29:08    \n\nANALY_BNL_LONG-gridgk02-htcondor    0      10    20       0        0          0     0      0+00:48:04   1+02:16:41    \n\nANALY_BNL_LONG-gridgk03-htcondor    0      72    42       0        0          0     0      0+02:44:07   0+08:38:11    \n\nANALY_BNL_LONG-gridgk04-htcondor    0      10    22       0        0          0     0      0+01:04:46   1+14:38:04\n\n  ...\n  ... \n\n\n\n\n\n 5.4  apf-simulate-scheds \n\n\n\nAllows to simulate the behaviour of the sched plugins. \n\n\nInput options:\n\n\n  \n\n    \nvariable\n\n    \ndescription\n\n    \ncomment\n\n  \n\n\n\n    \n--conf=\nfile\n\n    \npath to a fake config file with the list of sched plugins and their configurations \n\n    \nMandatory \n\n  \n\n\n\n    \n--activated=\nn_jobs\n\n    \nNumber of jobs in activated status\n\n    \nOptional. Defaults to 0 \n\n  \n\n\n\n    \n--pending=\nn_pilots\n\n    \nNumber of pilots in pending status\n\n    \nOptional. Defaults to 0 \n\n  \n\n\n\n    \n--running=\nn_pilots\n\n    \nNumber of pilots in runniing status\n\n    \nOptional. Defaults to 0 \n\n  \n\n\n\n    \n--status=\nqueue_status\n\n    \nStatus of the WMS queue. \n Valid values are \nonline\n, \noffline\n, and \ntest\n \n\n    \nOptional. Defaults to \nonline\n \n\n  \n\n\n\n\n\nExample. Given a fake config file like this one:\n\n\n\n\nContent of file /tmp/sim.conf:\n\n\n[FAKE_QUEUE]\n\n\nschedplugin = Ready, Scale, MaxPerCycle, MinPerCycle, StatusTest, StatusOffline, MaxPending\n\n\nsched.scale.factor = 0.5\n\n\nsched.minpercycle.minimum = 1\nsched.maxpercycle.maximum = 100\nsched.maxpending.maximum = 10\n\n\nsched.statustest.allowed = True\nsched.statustest.pilots = 3\n\n\nsched.statusoffline.allowed = True\nsched.statusoffline.pilots = 0\n\n\n\n\nwe can run a command like this\n\n\n\n\n[root@client ~]$ apf-simulate-scheds.py --conf=file:///tmp/sim.conf --activated=1234 --pending=5 --running=50\n\n\ninputs:\n   activated :  1234\n   pending   :  5\n   running   :  50\n   status    :  online\n\n\nsched plugin Ready\n   configuration:\n   output 1229 \n\n\nsched plugin Scale\n   configuration:\n      sched.scale.factor = 0.5 \n   output 615 \n\n\nsched plugin MaxPerCycle\n   configuration:\n      sched.maxpercycle.maximum = 100 \n   output 100 \n\n\nsched plugin MinPerCycle\n   configuration:\n      sched.minpercycle.minimum = 1 \n   output 100 \n\n\nsched plugin StatusTest\n   configuration:\n      sched.statustest.allowed = True \n      sched.statustest.pilots = 3 \n   output 100 \n\n\nsched plugin StatusOffline\n   configuration:\n      sched.statusoffline.allowed = True \n      sched.statusoffline.pilots = 0 \n   output 100 \n\n\nsched plugin MaxPending\n   configuration:\n      sched.maxpending.maximum = 10 \n   output 5 \n\n\nFinal output 5\n\n\n\n\n\n\n\n 5.5  apf-reverse-logstree \n\n\n\nThis tool creates, using links, a reverse tree structure of the factory logs directories. \nFrom an initial tree like this\n\n\n\n\n\nBASE_LOGS_DIR\n/\n    /2055-03-22/\n        /ANALY_FOO/\n        /FOO_PROD/\n        /FOO_MCORE/\n    /2055-03-23/\n        /ANALY_FOO/\n        /FOO_PROD/\n        /FOO_MCORE/\n    /2055-03-24/\n        /ANALY_FOO/\n        /FOO_PROD/\n        /FOO_MCORE/\n\n\n\n\nit creates a simlinks structure like this:\n\n\n\n\n\nNEW_BASE_LOGS_DIR\n/\n    /ANALY_FOO/\n        /2055-03-22/\n        /2055-03-24/\n        /2055-03-25/\n    /FOO_PROD/\n        /2055-03-22/\n        /2055-03-24/\n        /2055-03-25/\n    /FOO_MCORE/\n        /2055-03-22/\n        /2055-03-24/\n        /2055-03-25/\n\n\n\n\nInput options:\n\n\n\n\n  \n\n    \nvariable\n\n    \ndescription\n\n    \ncomment\n\n  \n\n\n\n    \n--basedir=\ndir\n \n\n    \n The root path to the tree with logs files.\n\n    \nOptional\n Default value is \n/home/autopyfactory/factory/logs/\n \n\n  \n\n\n\n    \n--newdir=\ndir\n\n    \n Location where the new tree, made out of symlinks, will be created.\n\n    \n Optional \n Default value is \n/tmp/apf-reverse-logstree", 
            "title": "AutoPyFactoryTools"
        }
    ]
}