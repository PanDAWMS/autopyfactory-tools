#!/bin/env python

import subprocess
import time

status_mappings = {'0': 'U', 
                   '1': 'I',
                   '2': 'R',
                   '3': 'X',
                   '4': 'C',
                   '5': 'H',
                   '6': 'E'}

cmd = 'condor_q -format "%s." ClusterId -format "%s " ProcId -format "%s " Owner -format "%s " QDate -format "%s " Cmd -format "%s " JobStatus -format "%s " RemoteWallClockTime -format "%s\n" MATCH_APF_QUEUE'
p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)
(out, err) = p.communicate()
out=out.strip()

maxid = 0
maxowner = 0
maxcmd = 0
maxtime = 0


lines = out.split('\n')
for line in lines[1:]:
    (id, owner, qdate, cmd, jobstatus, walltime, match_apf_queue) = line.split()

    jobstatus = status_mappings[jobstatus]
    qdate = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(float(qdate)))
    m, s = divmod(int(float(walltime)), 60)
    h, m = divmod(m, 60)
    walltime = '%d:%02d:%02d' %(h, m, s)

    if len(id)        > maxid    : maxid    = len(id)
    if len(owner)     > maxowner : maxowner = len(owner)          
    if len(cmd)       > maxcmd   : maxcmd   = len(cmd)            
    if len(walltime)  > maxtime  : maxtime  = len(walltime)            

    s = ''
    s += '%s' %id
    s += ' '*(maxid - len(id))
    s += '  %s' %owner
    s += ' '*(maxowner -len(owner)) 
    s += '  %s' %qdate
    s += '  %s' %cmd
    s += ' '*(maxcmd -len(cmd)) 
    s += '  %s' %jobstatus
    s += '  %s' %walltime
    s += ' '*(maxtime -len(walltime)) 
    s += '  %s' %match_apf_queue

    print s

